{"version":3,"sources":["../src/Tray.js"],"names":["Tray","trayMenu","label","accelerator","type","role","appMenu","process","platform","getName","submenu","tray","join","__dirname","setToolTip","setPressedImage","setContextMenu","buildFromTemplate","setApplicationMenu"],"mappings":"AAAA;;;;;;;;AAEA;;AACA;;;;;;;;IAEMA,I;AACJ,kBAAe;AAAA;;AACb,SAAKC,QAAL,GAAgB,CACd;AACEC,aAAO,gBADT,EAC2BC,aAAa;AADxC,KADc,EAId;AACED,aAAO,gBADT,EAC2BC,aAAa;AADxC,KAJc,EAOd;AACED,aAAO,mBADT,EAC8BC,aAAa;AAD3C,KAPc,EAUd;AACEC,YAAM;AADR,KAVc,EAad;AACEA,YAAM,QADR,EACkBF,OAAO;AADzB,KAbc,EAgBd;AACEE,YAAM;AADR,KAhBc,EAmBd;AACEC,YAAM;AADR,KAnBc,CAAhB;;AAwBA;AACA,SAAKC,OAAL,GAAeC,QAAQC,QAAR,KAAqB,QAArB,GAAgC,EAAhC,GAAsC,CACnD;AACEN,aAAO,cAAIO,OAAJ,EADT;AAEEC,eAAS,CACP;AACEL,cAAM;AADR,OADO,EAIP;AACED,cAAM;AADR,OAJO,EAOP;AACEC,cAAM,UADR;AAEEK,iBAAS;AAFX,OAPO,EAWP;AACEN,cAAM;AADR,OAXO,EAcP;AACEC,cAAM;AADR,OAdO,EAiBP;AACEA,cAAM;AADR,OAjBO,EAoBP;AACEA,cAAM;AADR,OApBO,EAuBP;AACED,cAAM;AADR,OAvBO,EA0BP;AACEC,cAAM;AADR,OA1BO;AAFX,KADmD,CAArD;AAmCD;;;;6BAES;AACR,WAAKM,IAAL,GAAY,mBAAiB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,QAA3B,EAAqC,KAArC,EAA4C,kBAA5C,CAAjB,CAAZ;;AAEA,WAAKF,IAAL,CAAUG,UAAV,CAAqB,OAArB;AACA,WAAKH,IAAL,CAAUI,eAAV,CAA0B,eAAKH,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,QAA3B,EAAqC,KAArC,EAA4C,wBAA5C,CAA1B;;AAEA,WAAKF,IAAL,CAAUK,cAAV,CAAyB,eAAKC,iBAAL,CAAuB,KAAKhB,QAA5B,CAAzB;AACA,qBAAKiB,kBAAL,CAAwB,eAAKD,iBAAL,CAAuB,KAAKX,OAA5B,CAAxB;AACD;;;;;;kBAGYN,I","file":"Tray.js","sourcesContent":["'use strict'\n\nimport { app, Menu, Tray as ElectronTray } from 'electron'\nimport path from 'path'\n\nclass Tray {\n  constructor () {\n    this.trayMenu = [\n      {\n        label: 'Capture Screen', accelerator: 'CommandOrControl+Shift+8'\n      },\n      {\n        label: 'Capture Window', accelerator: 'CommandOrControl+Shift+5'\n      },\n      {\n        label: 'Capture Selection', accelerator: 'CommandOrControl+Shift+2'\n      },\n      {\n        type: 'separator'\n      },\n      {\n        type: 'normal', label: 'Preferences'\n      },\n      {\n        type: 'separator'\n      },\n      {\n        role: 'quit'\n      }\n    ]\n\n    // macOS only\n    this.appMenu = process.platform !== 'darwin' ? [ ] : [\n      {\n        label: app.getName(),\n        submenu: [\n          {\n            role: 'about'\n          },\n          {\n            type: 'separator'\n          },\n          {\n            role: 'services',\n            submenu: [ ]\n          },\n          {\n            type: 'separator'\n          },\n          {\n            role: 'hide'\n          },\n          {\n            role: 'hideothers'\n          },\n          {\n            role: 'unhide'\n          },\n          {\n            type: 'separator'\n          },\n          {\n            role: 'quit'\n          }\n        ]\n      }\n    ]\n  }\n\n  create () {\n    this.tray = new ElectronTray(path.join(__dirname, '..', 'static', 'img', 'icon_menubar.png'))\n\n    this.tray.setToolTip('cappy')\n    this.tray.setPressedImage(path.join(__dirname, '..', 'static', 'img', 'icon_menubar_white.png'))\n\n    this.tray.setContextMenu(Menu.buildFromTemplate(this.trayMenu))\n    Menu.setApplicationMenu(Menu.buildFromTemplate(this.appMenu))\n  }\n}\n\nexport default Tray\n"]}